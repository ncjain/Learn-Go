func Errorf(format string, a ...interface{}) error
func Fprint(w io.Writer, a ...interface{}) (n int, err error)
func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error)
func Fprintln(w io.Writer, a ...interface{}) (n int, err error)
func Fscan(r io.Reader, a ...interface{}) (n int, err error)
func Fscanf(r io.Reader, format string, a ...interface{}) (n int, err error)
func Fscanln(r io.Reader, a ...interface{}) (n int, err error)
func Print(a ...interface{}) (n int, err error)
func Printf(format string, a ...interface{}) (n int, err error)
func Println(a ...interface{}) (n int, err error)
func Scan(a ...interface{}) (n int, err error)
func Scanf(format string, a ...interface{}) (n int, err error)
func Scanln(a ...interface{}) (n int, err error)

func Sprint(a ...interface{}) string
func Sprintf(format string, a ...interface{}) string
func Sprintln(a ...interface{}) string
func Sscan(str string, a ...interface{}) (n int, err error)
func Sscanf(str string, format string, a ...interface{}) (n int, err error)
func Sscanln(str string, a ...interface{}) (n int, err error)
type Formatter interface{ ... }
type GoStringer interface{ ... }
type ScanState interface{ ... }
type Scanner interface{ ... }
type State interface{ ... }
type Stringer interface{ ... }


fmt.Printf("%T", a)
fmt.Printf("%v", a)
fmt.Println("Hello"+ <- + "!")


fmt.Print("Enter number : ")
fmt.Scanln(&n)
fmt.Scan(&n)
fmt.Println(n,"is Even number")
fmt.Printf("%d is a prime number",a)


package main
import "fmt"
 

for i := 0; i < temp; i++ {
	fmt.Print("Enter the number : ")
	fmt.Scan(&num[i])
}

package main

import "fmt"

func main() {
	s := "Hello World"
	fmt.Println("len(s)", len(s))
	
	for i := 0; i < len(s); i++ {
		fmt.Printf("%c ", s[i])
	}

	fmt.Println("")

	for i := 0; i < len(s); i++ {
		fmt.Printf("%v ", s[i])
	}

	fmt.Println("")

	for i := 0; i < len(s); i++ {
		fmt.Printf("%x ", s[i])
	}

	fmt.Println("")
        for i := 0; i < len(s); i++ {
		fmt.Printf("%T ", s[i])
	}

	fmt.Println("")
}